#!/bin/bash

set -e
set -o pipefail

header() {
    echo
    echo "###############################################"
    echo
    echo $*
    echo
}

gen_manifest() {
    cpi=${1}; lite=${2}
    header "Manifest CPI: ${cpi} LITE: ${lite}"
    bosh2 int <(
        cat ops/cpis/${cpi}/vars.tmpl && \
            echo "\ndirector_name: bucc-ci" && \
            echo "internal_ip: 127.0.0.1" && \
            if [ ! -z ${VARS} ]; then bosh2 int <(echo ${VARS}); fi
    ) > vars.yml
    cat vars.yml | grep -v 'password\|secret\|key'

    rm -rf state && mkdir state
    echo ${lite} > state/lite
    echo ${cpi} > state/cpi

    if [ -d ops/cpis/${cpi}/flags ]; then
        flags=$(ls ops/cpis/${cpi}/flags | grep yml | cut -d. -f1 | sort -R)
        echo ${flags} > state/flags
        echo "flags: $(echo ${flags} | xargs)"
    fi

    manifest_name=${cpi}
    if [ ${lite} = "true" ]; then
        manifest_name+="-lite"
    fi

    manifest="../bucc-generated-manifest/${manifest_name}.yml"

    ./bin/bucc int --var-errs > ${manifest}

    if ! grep -q ${cpi} ${manifest}; then
        echo "Invalid manifest missing cpi: ${cpi}"
        echo ""
        cat ${manifest}
        exit 1
    fi

    if [ ${lite} = "true" ]; then
        if ! grep -q warden ${manifest}; then
            echo "Invalid manifest missing warden"
            echo ""
            cat ${manifest}
            exit 1
        fi
    fi


    echo ""
    echo "bucc-generated-manifest/${manifest_name}.yml"
}

pushd bucc > /dev/null

while read config; do
    cpi=$(echo ${config} | cut -d: -f1)

    if echo ${config} | grep lite; then
        gen_manifest ${cpi} true
    fi

    if echo ${config} | grep normal; then
        gen_manifest ${cpi} false
    fi
done <support_matrix.yml
