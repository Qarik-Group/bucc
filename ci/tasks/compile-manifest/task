#!/usr/bin/env bash

set -e
set -o pipefail

compile_manifest=$(pwd)/compile-manifest/manifest.yml
PATH=$(pwd)/bucc/bin:${PATH}

# set cpi + remove ops files with already compiled releases
pushd bucc > /dev/null
    mkdir -p state
    echo "virtualbox" > state/cpi
    echo "foo: bar" > vars.yml
    echo "true" > state/lite
    find ops -name "*compiled-release*" -exec mv {} {}.tmp \;
popd > /dev/null

stemcell_version=$(bucc int --path /releases/name=bosh/url | cut -d- -f8)
cat > ${compile_manifest} <<EOF
---
name: compile-releases
stemcells:
- alias: large
  os: ubuntu-bionic
  version: "${stemcell_version}"
update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 1000 - 90000
  update_watch_time: 1000 - 90000
instance_groups: []
releases:
EOF

for name in $(echo "${RELEASES}" | jq -r '.[].name'); do
    release=$(spruce json <(bucc int --path /releases/name=${name}))
    echo "- ${release}" >> ${compile_manifest}
done

bosh int ${compile_manifest} > ${compile_manifest}.tmp
mv ${compile_manifest}{.tmp,}
cat ${compile_manifest}

git config --global user.email "ci@starkandwayne.com"
git config --global user.name "CI Bot"

pushd compile-manifest > /dev/null

git add -A
git commit -m "Updated compile releases manifest.yml" || echo "No changes to commit"

popd > /dev/null
git clone compile-manifest compile-manifest-out
